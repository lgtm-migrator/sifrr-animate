/*! Sifrr.animate v0.0.1 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):((t=t||self).Sifrr=t.Sifrr||{},t.Sifrr.animate=e())}(this,function(){"use strict";const t={};var e=class{constructor(e){const r=e.join("_");return t[r]||(this.setProps(...e),t[r]=this.final.bind(this)),t[r]}setProps(t,e,r,i){let n={x1:t,y1:e,x2:r,y2:i,A:(t,e)=>1-3*e+3*t,B:(t,e)=>3*e-6*t,C:t=>3*t,CalcBezier:(t,e,r)=>((this.A(e,r)*t+this.B(e,r))*t+this.C(e))*t,GetSlope:(t,e,r)=>3*this.A(e,r)*t*t+2*this.B(e,r)*t+this.C(e)};Object.assign(this,n)}final(t){return this.x1==this.y1&&this.x2==this.y2?t:this.CalcBezier(this.GetTForX(t),this.y1,this.y2)}GetTForX(t){let e=t;for(let r=0;r<4;++r){let r=this.GetSlope(e,this.x1,this.x2);if(0==r)return e;e-=(this.CalcBezier(e,this.x1,this.x2)-t)/r}return e}},r={linear:[0,0,1,1],ease:[.25,.1,.25,1],easeIn:[.42,0,1,1],easeOut:[0,0,.58,1],easeInOut:[.42,0,.58,1]};const i=/(\d+\.?\d*)/;var n=function({target:t,prop:n,from:s,to:o,time:a=300,type:u="ease",onUpdate:f,round:p=!1}){const h=o.toString().split(i),c=h.length,l=[],m=[],y=[],d=(s||t[n]||"").toString().split(i),w="function"==typeof f;for(let t=0;t<c;t++){const e=Number(h[t]);isNaN(e)||!h[t]?l.push(h[t]):(m.push(Number(d[t])||0),y.push(e-(Number(d[t])||0)))}return u="function"==typeof u?u:new e(r[u]||u),new Promise(e=>{let r=performance.now();window.requestAnimationFrame(function i(s){const o=(s-r)/a,h=u(o>=1?1:o),c=y.map((t,e)=>p?Math.round(h*t+m[e]):h*t+(m[e]||0)),d=String.raw({raw:l},...c);if(t[n]=Number(d)||d,w&&f(t,n,t[n]),o>=1)return e();window.requestAnimationFrame(i)})})};function s({targets:t,target:e,to:r,time:i,type:s,onUpdate:o,round:a}){return t=t?Array.from(t):[e],Promise.all(t.map(t=>(function t(e,r){const u=[];for(let f in r){let p,h;Array.isArray(r[f])?[p,h]=r[f]:h=r[f],"object"!=typeof r[f]||Array.isArray(r[f])?u.push(n({target:e,prop:f,to:h,time:i,type:s,from:p,onUpdate:o,round:a})):u.push(t(e[f],r[f]))}return Promise.all(u)})(t,r)))}return s.types=r,s.wait=((t=0)=>new Promise(e=>setTimeout(e,t))),s.animate=s,s});
/*! (c) @aadityataparia */
