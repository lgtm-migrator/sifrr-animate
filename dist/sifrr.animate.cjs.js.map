{"version":3,"file":"sifrr.animate.cjs.js","sources":["../src/bezier.js","../src/wait.js","../src/types.js","../src/animateone.js","../src/animate.js"],"sourcesContent":["const beziers = {};\n\nclass Bezier {\n  static fromArray(arr) {\n    const key = arr.toString();\n    if (!beziers[key]) {\n      const bez = new Bezier(...arr);\n      beziers[key] = bez.final.bind(bez);\n    }\n    return beziers[key];\n  }\n\n  constructor(x1, y1, x2, y2) {\n    this.setProps(x1, y1, x2, y2);\n  }\n\n  setProps(x1, y1, x2, y2) {\n    let props = { x1, y1, x2, y2 };\n    const A = (a, b) => 1.0 - 3.0 * b + 3.0 * a;\n    const B = (a, b) => 3.0 * b - 6.0 * a;\n    const C = a => 3.0 * a;\n\n    const aX1X2 = A(x1, x2) * 3.0;\n    const bX1X2 = B(x1, x2) * 2.0;\n    const cX1 = C(x1);\n    this.GetSlope = t => aX1X2 * t * t + bX1X2 * t + cX1;\n\n    this.CalcBezier = (t, a, b) => ((A(a, b) * t + B(a, b)) * t + C(a)) * t;\n\n    Object.assign(this, props);\n  }\n\n  final(x) {\n    if (this.x1 == this.y1 && this.x2 == this.y2) return x;\n    return this.CalcBezier(this.GetTForX(x), this.y1, this.y2);\n  }\n\n  GetTForX(xx) {\n    let t = xx;\n    for (let i = 0; i < 4; ++i) {\n      let slope = this.GetSlope(t);\n      if (slope == 0) return t;\n      let x = this.CalcBezier(t, this.x1, this.x2) - xx;\n      t -= x / slope;\n    }\n    return t;\n  }\n}\n\nexport default Bezier;\n","export default t =>\n  t > 0 ? new Promise(res => setTimeout(res, t)) : Promise.resolve(true);\n","export const linear = [0, 0, 1, 1];\nexport const ease = [0.25, 0.1, 0.25, 1];\nexport const easeIn = [0.42, 0, 1, 1];\nexport const easeOut = [0, 0, 0.58, 1];\nexport const easeInOut = [0.42, 0, 0.58, 1];\nexport const spring = [0.3642, 0, 0.6358, 1];\n","import Bezier from './bezier';\nimport wait from './wait';\nimport * as types from './types';\n\nconst digitRgx = /((?:[+\\-*/]=)?-?\\d+\\.?\\d*)/;\nconst frames = new Set();\n\nfunction runFrames(currentTime) {\n  frames.forEach(f => f(currentTime));\n  window.requestAnimationFrame(runFrames);\n}\nwindow.requestAnimationFrame(runFrames);\n\nfunction animateOne({\n  target,\n  prop,\n  from,\n  to,\n  time = 300,\n  type = 'spring',\n  onUpdate,\n  round = false,\n  finalPercent = 1,\n  initialPercent = 0,\n  delay = 0 // number\n}) {\n  const toSplit = to.toString().split(digitRgx),\n    l = toSplit.length,\n    raw = [],\n    fromNums = [],\n    diffs = [];\n  const fromSplit = (from || target[prop] || '').toString().split(digitRgx);\n  const onUp = typeof onUpdate === 'function';\n  for (let i = 0; i < l; i++) {\n    const fn = Number(fromSplit[i]) || 0;\n    let tn;\n    if (toSplit[i][1] === '=') {\n      tn = Number(toSplit[i].slice(2));\n      switch (toSplit[i][0]) {\n        case '+':\n          tn = fn + tn;\n          break;\n        case '-':\n          tn = fn - tn;\n          break;\n        case '*':\n          tn = fn * tn;\n          break;\n        case '/':\n          tn = fn / tn;\n          break;\n      }\n    } else tn = Number(toSplit[i]);\n    if (isNaN(tn) || !toSplit[i]) raw.push(toSplit[i]);\n    else {\n      fromNums.push(fn);\n      diffs.push(tn - fn);\n    }\n  }\n\n  const rawObj = { raw };\n  const reverse = finalPercent < initialPercent;\n  return wait(delay).then(\n    () =>\n      new Promise((resolve, reject) => {\n        if (types[type]) type = types[type];\n        if (Array.isArray(type)) type = Bezier.fromArray(type);\n        else if (typeof type !== 'function')\n          return reject(\n            Error(\n              'type should be one of ' +\n                Object.keys(types).toString() +\n                ' or Bezier Array or Function, given ' +\n                type\n            )\n          );\n\n        let lastTime = performance.now(),\n          percent = initialPercent;\n        const frame = function(currentTime) {\n          percent = reverse\n            ? percent - (currentTime - lastTime) / time\n            : percent + (currentTime - lastTime) / time;\n          lastTime = currentTime;\n          const bper = reverse\n            ? type(Math.max(percent, finalPercent))\n            : type(Math.min(percent, finalPercent));\n          const next = diffs.map((d, i) => {\n            const n = bper * d + fromNums[i];\n            return round ? Math.round(n) : n;\n          });\n          const val = String.raw(rawObj, ...next);\n          try {\n            target[prop] = Number(val) || val;\n            if (onUp) onUpdate(target, prop, target[prop]);\n            if (\n              (reverse ? percent <= finalPercent : percent >= finalPercent) ||\n              percent > 1\n            )\n              resolve(frames.delete(frame));\n          } catch (e) {\n            frames.delete(frame);\n            reject(e);\n          }\n        };\n        frames.add(frame);\n      })\n  );\n}\n\nexport default animateOne;\n","import animateOne from './animateone';\nimport * as types from './types';\nimport wait from './wait';\n\nfunction animate({\n  targets,\n  target,\n  to, // object or function\n  time, // number or function\n  type,\n  onUpdate,\n  round,\n  finalPercent,\n  initialPercent,\n  delay // number or function\n}) {\n  targets = targets ? Array.from(targets) : [target];\n  function iterate(tg, props, d, ntime, fp, bp) {\n    const promises = [];\n    for (let prop in props) {\n      let from, final;\n      if (Array.isArray(props[prop])) [from, final] = props[prop];\n      else final = props[prop];\n      if (typeof props[prop] === 'object' && !Array.isArray(props[prop])) {\n        promises.push(iterate(tg[prop], props[prop], d, ntime, fp, bp));\n      } else {\n        promises.push(\n          animateOne({\n            target: tg,\n            prop,\n            to: final,\n            time: ntime,\n            type,\n            from,\n            onUpdate,\n            round,\n            delay: d,\n            finalPercent: fp,\n            initialPercent: bp\n          })\n        );\n      }\n    }\n    return Promise.all(promises);\n  }\n  let numTo = to,\n    numDelay = delay,\n    numTime = time,\n    numPer = finalPercent,\n    befPer = initialPercent;\n  return Promise.all(\n    targets.map((target, i) => {\n      if (typeof to === 'function') numTo = to.call(target, i);\n      if (typeof delay === 'function') numDelay = delay.call(target, i);\n      if (typeof time === 'function') numTime = time.call(target, i);\n      if (typeof finalPercent === 'function')\n        numPer = finalPercent.call(target, i);\n      if (typeof initialPercent === 'function')\n        befPer = initialPercent.call(target, i);\n      return iterate(target, numTo, numDelay, numTime, numPer, befPer);\n    })\n  );\n}\n\nexport { types, wait, animate, animateOne };\nexport function keyframes(arrOpts) {\n  let promise = Promise.resolve(true);\n  arrOpts.forEach(opts => {\n    if (Array.isArray(opts))\n      promise = promise.then(() => Promise.all(opts.map(animate)));\n    promise = promise.then(() => animate(opts));\n  });\n  return promise;\n}\nexport const loop = fxn => fxn().then(() => loop(fxn));\n"],"names":["beziers","Bezier","fromArray","arr","key","toString","bez","final","bind","constructor","x1","y1","x2","y2","setProps","props","A","a","b","B","C","aX1X2","bX1X2","cX1","GetSlope","t","CalcBezier","Object","assign","x","GetTForX","xx","i","slope","Promise","res","setTimeout","resolve","linear","ease","easeIn","easeOut","easeInOut","spring","digitRgx","frames","Set","runFrames","currentTime","forEach","f","window","requestAnimationFrame","animateOne","target","prop","from","to","time","type","onUpdate","round","finalPercent","initialPercent","delay","toSplit","split","l","length","raw","fromNums","diffs","fromSplit","onUp","fn","Number","tn","slice","isNaN","push","rawObj","reverse","wait","then","reject","types","Array","isArray","Error","keys","lastTime","performance","now","percent","frame","bper","Math","max","min","next","map","d","n","val","String","delete","e","add","animate","targets","iterate","tg","ntime","fp","bp","promises","all","numTo","numDelay","numTime","numPer","befPer","call","keyframes","arrOpts","promise","opts","loop","fxn"],"mappings":"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"}